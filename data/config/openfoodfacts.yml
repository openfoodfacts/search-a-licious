indices:
  "off":
    index:
      id_field_name: code
      # while last_modified_t is changed when a field change
      # last_updated_t also change if computed attributes changes (eg after a taxonomy change)
      last_modified_field_name: last_updated_t
      name: openfoodfacts
      number_of_replicas: 1
      number_of_shards: 4
    scripts:
      # IMPORTANT: this is a demo script, this is not the "personal score" true computation
      personal_score:
        # see https://www.elastic.co/guide/en/elasticsearch/painless/8.14/index.html
        lang: painless
        source: |-
          String nova_index = (doc['nova_group'].size() != 0) ? doc['nova_group'].value.toString() : "unknown";
          String nutri_index = (doc['nutriscore_grade'].size() != 0) ? doc['nutriscore_grade'].value : 'e';
          String environmental_index = (doc['environmental_score_grade'].size() != 0) ? doc['environmental_score_grade'].value : 'e';
          return (
            params['nova_to_score'].getOrDefault(environmental_index, 0) * params['nova_group']
            + params['grades_to_score'].getOrDefault(nutri_index, 0) * params['nutri_score']
            + params['grades_to_score'].getOrDefault(environmental, 0) * params['environmental_score']
          );
        params:
          environmental_score: 1
          nutri_score: 1
          nova_group: 1
        static_params:
          nova_to_score: {"1": 100, "2": 100, "3": 75, "4": 0, "unknown": 0}
          grades_to_score: {"a+": 100, "a": 90, "b": 72, "c": 54, "d": 36, "e": 18, "f": 0, "unknown": 0, "not-applicable": 0}
    fields:
      code:
        full_text_search: true
        required: true
        type: keyword
      obsolete:
        required: true
        type: bool
      obsolete_since_date:
        type: date
      product_name:
        full_text_search: true
        type: text_lang
      generic_name:
        full_text_search: true
        type: text_lang
      categories:
        full_text_search: true
        input_field: categories_tags
        taxonomy_name: categories
        type: taxonomy
        bucket_agg: true
      labels:
        full_text_search: true
        input_field: labels_tags
        taxonomy_name: labels
        type: taxonomy
        bucket_agg: true
      brands:
        full_text_search: true
        input_field: brands_tags
        type: taxonomy
        taxonomy_name: brands
        bucket_agg: true
      emb_codes:
        full_text_search: true
        input_field: emb_codes_tags
        type: keyword
      manufacturing_places:
        input_field: manufacturing_places_tags
        type: keyword
      compared_to_category:
        type: keyword
        bucket_agg: true
      lang:
        type: keyword
        bucket_agg: true
      lc:
        type: keyword
      languages_codes:
        type: keyword
        bucket_agg: true
      languages:
        type: taxonomy
        input_field: languages_tags
        taxonomy_name: languages
        bucket_agg: true
      owner:
        type: keyword
        bucket_agg: true
      # FIXME: isn't it just for storing ?
      # should we introduce a "url" field type ?
      link:
        type: keyword
      quantity:
        type: text
      product_quantity:
        type: float
      product_quantity_unit:
        type: keyword
      countries:
        type: taxonomy
        input_field: countries_tags
        bucket_agg: true
        taxonomy_name: countries
      states:
        type: taxonomy
        input_field: states_tags
        bucket_agg: true
        taxonomy_name: states
      origins:
        type: taxonomy
        taxonomy_name: origins
        input_field: origins_tags
      # FIXME: I would swap ingredients_tags to ingredients and have another name for ingredients
      # because it does not feel natural for search
      # or maybe ingredient vs ingredients ?
      ingredients_tags:
        # FIXME: I'm not sure it's a good idea because it makes things confusing IMO to search carrots
        # and getting a lot of products that have some carrots in their ingredients
        # full_text_search: true
        type: taxonomy
        input_field: ingredients_tags
        taxonomy_name: ingredients
      # TODO: it would be good to have a taxonomy for properties I guess so that we can translate
      ingredients_analysis:
        type: keyword
        input_field: ingredients_analysis_tags
        bucket_agg: true
      ingredients_n:
        type: integer
      known_ingredients_n:
        type: integer
      unknown_ingredients_n:
        type: integer
      ingredients_text:
        type: text_lang
      unique_scans_n:
        type: integer
      scans_n:
        type: integer
      nutrition_grades:
        type: keyword
        bucket_agg: true
      nutrition_grades_tags:
        type: keyword
        bucket_agg: true
      environmental_score_grade:
        type: keyword
        bucket_agg: true
      environmental_score_score:
        type: integer
      # FIXME: do we really need that over environmental_score_grade ?
      environmental_score:
        type: keyword
        input_field: environmental_score_tags
      emb_codes_tags:
        type: keyword
      nova_group:
        type: keyword
        bucket_agg: true
      # FIXME: why do we need it ? Is it ok like that ?
      uploaded_images:
        type: nested
        fields:
          id:
            type: integer
          uploaded_t:
            type: date
          uploader:
            type: keyword
          full_size: &full_size_definition
            type: object
            fields:
              h:
                type: integer
              w:
                type: integer
      # TODO: what do we want there ? url / last_modified_t maybe and full_size ?
      # do we need url ?
      selected_images:
        type: object
        fields:
          front: &selected_images_definition
            type: nested
            fields:
              lc:
                type: keyword
              full_size: *full_size_definition
              rev:
                type: integer
              source:
                type: object
                fields:
                  id:
                    type: integer
                  uploader:
                    type: keyword
                  uploaded_t:
                    type: date
          ingredients: *selected_images_definition
          nutrition: *selected_images_definition
          packaging: *selected_images_definition
      # FIXME: I need a keyword_lang field for this one
      # Also do we really need display + small + thumb ?
      # We could also avoid saving the prefix ?
      #selected_images:
      #  type: object
      #  fields:
      #    front:
      #      display:
      #        type
      last_image_t:
        type: date
      additives:
        type: taxonomy
        taxonomy_name: additives
        input_field: additives_tags
        bucket_agg: true
      additives_n:
        type: integer
      allergens:
        type: taxonomy
        input_field: allergens_tags
        taxonomy_name: allergens
        bucket_agg: true
      vitamins:
        type: taxonomy
        taxonomy_name: vitamins
        input_field: vitamins_tags
        bucket_agg: true
      amino_acids:
        type: taxonomy
        input_field: amino_acids_tags
        taxonomy_name: amino_acids
        bucket_agg: true
      nucleotides:
        type: taxonomy
        input_field: nucleotides_tags
        taxonomy_name: nucleotides
        bucket_agg: true
      minerals:
        type: taxonomy
        input_field: minerals_tags
        taxonomy_name: minerals
        bucket_agg: true
      # this field is a bit different from what the API provides to be able to leverage search
      nova_group_markers:
        type: nested
        fields:
          id:
            type: keyword
          marker:
            type: nested
            fields:
              type:
                # we could make it a taxonomy field,
                # but we would need to merge different categories
                type: keyword
              id:
                type: keyword
      categories_properties_tags:
        # TODO: would be good to have a properties taxonomy
        type: keyword
        input_field: categories_tags
        bucket_agg: true
      forest_footprint_data:
        type: disabled
      ingredients:
        type: nested
        fields:
          id:
            # We don't need synonyms here, it's really an id
            # we have ingredients_tags to index the ingredients
            type: keyword
          is_in_taxonomy:
            type: bool
          percent_estimate:
            type: float
          percent_max:
            type: float
          percent_min:
            type: float
          # FIXME what do we want more ? vegan, vegetarian, ecobalyse_code, ecobaly_proxy_code, etc ?
      ingredients_analysis_tags:
        type: keyword
      serving_quantity:
        type: float
      serving_quantity_unit:
        type: keyword
      serving_size:
        type: text
      nutrient_levels:
        type: object
        fields:
          fat:
            type: keyword
          salt:
            type: keyword
          saturated-fat:
            type: keyword
          sugars:
            type: keyword
      no_nutrition_data:
        type: bool
      nutrition_data_per:
        type: keyword
      nutrition_data_prepared_per:
        type: keyword
      nutriments:
        type: object
        fields:
          energy-kcal_100g:
            type: float
          energy-kj_100g:
            type: float
          fat_100g:
            type: float
          saturated-fat_100g:
            type: float
          carbohydrates_100g:
            type: float
          sugars_100g:
            type: float
          proteins_100g:
            type: float
          fiber_100g:
            type: float
          salt_100g:
            type: float
          sodium_100g:
            type: float
          alcohol_100g:
            type: float
      other_nutritional_substances_tags:
        type: keyword
      nutriscore_data:
        type: disabled
      nutriscore_grade:
        type: keyword
        bucket_agg: true
      traces:
        type: taxonomy
        # TODO: verify it's that !
        taxonomy_name: allergens
        input_field: traces_tags
        bucket_agg: true
      stores:
        type: taxonomy
        taxonomy_name: stores
        input_field: stores_tags
        bucket_agg: true
      popularity_key:
        type: long
      popularity_tags:
        type: keyword
        bucket_agg: true
      nutriscore_score:
        type: integer
      completeness:
        type: float
      last_checked_t:
        type: date
      last_checker:
        type: keyword
      states_tags:
        type: keyword
        bucket_agg: true
      misc_tags:
        type: keyword
        bucket_agg: true
      data_quality_bugs_tags:
        type: keyword
        bucket_agg: true
      data_quality_errors_tags:
        type: keyword
        bucket_agg: true
      data_quality_info_tags:
        type: keyword
        bucket_agg: true
      data_quality_warnings:
        type: keyword
        bucket_agg: true
      data_sources:
        type: keyword
        input_field: data_sources
        bucket_agg: true
      packagings:
        type: nested
        fields:
          material:
            type: taxonomy
            taxonomy_name: packaging_materials
            bucket_agg: true
          number_of_units:
            type: integer
          quantity_per_unit_value:
            type: float
          quantity_per_unit_unit:
            type: keyword
          recycling:
            type: taxonomy
            taxonomy_name: packaging_recycling
            bucket_agg: true
          shape:
            type: taxonomy
            taxonomy_name: packaging_shapes
            bucket_agg: true
          weight_measured:
            type: float
      packagings_complete:
        type: bool
      checkers_tags:
        type: keyword
      correctors_tags:
        type: keyword
      created_t:
        type: date
      creator:
        type: keyword
      editors_tags:
        type: keyword
      last_editor:
        type: keyword
      last_modified_by:
        type: keyword
      last_modified_t:
        type: date
      last_updated_t:
        type: date
      photographers:
        type: keyword
        input_field: photographers_tags
      rev:
        type: integer
      teams:
        type: keyword
        input_field: teams_tags

    document_denylist:
    - '8901552007122'
    lang_separator: _
    match_phrase_boost: 2.0
    preprocessor: app.openfoodfacts.DocumentPreprocessor
    document_fetcher: app.openfoodfacts.DocumentFetcher
    result_processor: app.openfoodfacts.ResultProcessor
    split_separator: ','
    redis_stream_name: product_updates_off
    primary_color: "#341100"
    accent_color: "#ff8714"
    taxonomy:
      preprocessor: app.openfoodfacts.TaxonomyPreprocessor
      sources:
      - name: categories
        url: https://static.openfoodfacts.org/data/taxonomies/categories.full.json
      - name: labels
        url: https://static.openfoodfacts.org/data/taxonomies/labels.full.json
      - name: additives
        url: https://static.openfoodfacts.org/data/taxonomies/additives.full.json
      - name: allergens
        url: https://static.openfoodfacts.org/data/taxonomies/allergens.full.json
      - name: amino_acids
        url: https://static.openfoodfacts.org/data/taxonomies/amino_acids.full.json
      - name: countries
        url: https://static.openfoodfacts.org/data/taxonomies/countries.full.json
      - name: data_quality
        url: https://static.openfoodfacts.org/data/taxonomies/data_quality.full.json
      - name: food_groups
        url: https://static.openfoodfacts.org/data/taxonomies/food_groups.full.json
      - name: improvements
        url: https://static.openfoodfacts.org/data/taxonomies/improvements.full.json
      - name: ingredients
        url: https://static.openfoodfacts.org/data/taxonomies/ingredients.full.json
      - name: ingredients_analysis
        url: https://static.openfoodfacts.org/data/taxonomies/ingredients_analysis.full.json
      - name: ingredients_processing
        url: https://static.openfoodfacts.org/data/taxonomies/ingredients_processing.full.json
      - name: languages
        url: https://static.openfoodfacts.org/data/taxonomies/languages.full.json
      - name: minerals
        url: https://static.openfoodfacts.org/data/taxonomies/minerals.full.json
      - name: misc
        url: https://static.openfoodfacts.org/data/taxonomies/misc.full.json
      - name: nova_groups
        url: https://static.openfoodfacts.org/data/taxonomies/nova_groups.full.json
      - name: nucleotides
        url: https://static.openfoodfacts.org/data/taxonomies/nucleotides.full.json
      - name: nutrients
        url: https://static.openfoodfacts.org/data/taxonomies/nutrients.full.json
      - name: origins
        url: https://static.openfoodfacts.org/data/taxonomies/origins.full.json
      - name: other_nutritional_substances
        url: https://static.openfoodfacts.org/data/taxonomies/other_nutritional_substances.full.json
      - name: packaging_materials
        url: https://static.openfoodfacts.org/data/taxonomies/packaging_materials.full.json
      - name: packaging_recycling
        url: https://static.openfoodfacts.org/data/taxonomies/packaging_recycling.full.json
      - name: packaging_shapes
        url: https://static.openfoodfacts.org/data/taxonomies/packaging_shapes.full.json
      - name: periods_after_opening
        url: https://static.openfoodfacts.org/data/taxonomies/periods_after_opening.full.json
      - name: preservation
        url: https://static.openfoodfacts.org/data/taxonomies/preservation.full.json
      - name: states
        url: https://static.openfoodfacts.org/data/taxonomies/states.full.json
      - name: vitamins
        url: https://static.openfoodfacts.org/data/taxonomies/vitamins.full.json
      - name: brands
        url: https://static.openfoodfacts.org/data/taxonomies/brands.full.json
      - name: stores
        url: https://static.openfoodfacts.org/data/taxonomies/stores.full.json
      index:
        number_of_replicas: 1
        number_of_shards: 4
        name: off_taxonomy
    supported_langs:
    # a specific language to put the main language entry
    - main
    - aa
    - ab
    - ae
    - af
    - ak
    - am
    - ar
    - as
    - at
    - au
    - ay
    - az
    - be
    - bg
    - bi
    - bn
    - br
    - bs
    - ca
    - ch
    - co
    - cs
    - cu
    - cy
    - da
    - de
    - dv
    - dz
    - el
    - en
    - eo
    - es
    - et
    - eu
    - fa
    - fi
    - fj
    - fo
    - fr
    - fy
    - ga
    - gb
    - gd
    - gl
    - gn
    - gp
    - gu
    - gv
    - ha
    - he
    - hi
    - hk
    - ho
    - hr
    - ht
    - hu
    - hy
    - hz
    - id
    - in
    - io
    - is
    - it
    - iw
    - ja
    - jp
    - jv
    - ka
    - kk
    - kl
    - km
    - kn
    - ko
    - ku
    - ky
    - la
    - lb
    - lc
    - ln
    - lo
    - lt
    - lu
    - lv
    - mg
    - mh
    - mi
    - mk
    - ml
    - mn
    - mo
    - mr
    - ms
    - mt
    - my
    - na
    - nb
    - nd
    - ne
    - nl
    - nn
    - 'no'
    - nr
    - ny
    - oc
    - om
    - pa
    - pl
    - ps
    - pt
    - qq
    - qu
    - re
    - rm
    - rn
    - ro
    - rs
    - ru
    - rw
    - sd
    - se
    - sg
    - sh
    - si
    - sk
    - sl
    - sm
    - sn
    - so
    - sq
    - sr
    - ss
    - st
    - sv
    - sw
    - ta
    - te
    - tg
    - th
    - ti
    - tk
    - tl
    - tn
    - to
    - tr
    - ts
    - ug
    - uk
    - ur
    - us
    - uz
    - ve
    - vi
    - wa
    - wo
    - xh
    - yi
    - yo
    - zh
    - zu
default_index: "off"