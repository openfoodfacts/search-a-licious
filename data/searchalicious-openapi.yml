openapi: 3.1.0
info:
  title: search-a-licious API
  description: '

    The Search-a-licious API helps you quickly build applications with search capabilities.


    You can find the API documentation here.


    See also the available [web-components](../static/web-components.html) to build
    your search interface.


    See the [project](https://github.com/openfoodfacts/search-a-licious/) for more
    information.

    '
  contact:
    name: The Open Food Facts team
    url: https://world.openfoodfacts.org/
    email: contact@openfoodfacts.org
  license:
    name: ' AGPL-3.0'
    url: https://www.gnu.org/licenses/agpl-3.0.en.html
  version: 0.1.0
paths:
  /document/{identifier}:
    get:
      summary: Get Document
      description: Fetch a document from Elasticsearch with specific ID.
      operationId: get_document_document__identifier__get
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
          title: Identifier
      - name: index_id
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: "Index ID to use for the search, if not provided, the default\
            \ index is used.\n        If there is only one index, this parameter is\
            \ not needed."
          title: Index Id
        description: "Index ID to use for the search, if not provided, the default\
          \ index is used.\n        If there is only one index, this parameter is\
          \ not needed."
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /search:
    post:
      summary: Search
      operationId: search_search_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchParameters'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      summary: Search Get
      operationId: search_get_search_get
      parameters:
      - name: q
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: 'The search query, it supports Lucene search query

            syntax (https://lucene.apache.org/core/3_6_0/queryparsersyntax.html).
            Words

            that are not recognized by the lucene query parser are searched as full
            text

            search.


            Example: `categories_tags:"en:beverages" strawberry brands:"casino"` query
            use a

            filter clause for categories and brands and look for "strawberry" in multiple

            fields.


            The query is optional, but `sort_by` value must then be provided.'
          title: Q
        description: 'The search query, it supports Lucene search query

          syntax (https://lucene.apache.org/core/3_6_0/queryparsersyntax.html). Words

          that are not recognized by the lucene query parser are searched as full
          text

          search.


          Example: `categories_tags:"en:beverages" strawberry brands:"casino"` query
          use a

          filter clause for categories and brands and look for "strawberry" in multiple

          fields.


          The query is optional, but `sort_by` value must then be provided.'
      - name: langs
        in: query
        required: false
        schema:
          type: string
          description: 'List of languages we want to support during search.

            This list should include the user expected language, and additional languages
            (such

            as english for example).


            This is currently used for language-specific subfields to choose in which

            subfields we''re searching in.


            If not provided, `[''en'']` is used.'
          title: Langs
        description: 'List of languages we want to support during search.

          This list should include the user expected language, and additional languages
          (such

          as english for example).


          This is currently used for language-specific subfields to choose in which

          subfields we''re searching in.


          If not provided, `[''en'']` is used.'
      - name: page_size
        in: query
        required: false
        schema:
          type: integer
          description: Number of results to return per page.
          default: 10
          title: Page Size
        description: Number of results to return per page.
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          description: Page to request, starts at 1.
          default: 1
          title: Page
        description: Page to request, starts at 1.
      - name: fields
        in: query
        required: false
        schema:
          type: string
          description: List of fields to include in the response. All other fields
            will be ignored.
          title: Fields
        description: List of fields to include in the response. All other fields will
          be ignored.
      - name: sort_by
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: "Field name to use to sort results, the field should exist\n\
            \            and be sortable. If it is not provided, results are sorted\
            \ by descending relevance score.\n\n            If you put a minus before\
            \ the name, the results will be sorted by descending order.\n\n      \
            \      If the field name match a known script (defined in your configuration),\n\
            \            it will be use for sorting.\n\n            In this case you\
            \ also need to provide additional parameters corresponding to your script\
            \ parameters.\n            If a script needs parameters, you can only\
            \ use the POST method.\n\n            Beware that this may have a big\
            \ impact on performance.\n            "
          title: Sort By
        description: "Field name to use to sort results, the field should exist\n\
          \            and be sortable. If it is not provided, results are sorted\
          \ by descending relevance score.\n\n            If you put a minus before\
          \ the name, the results will be sorted by descending order.\n\n        \
          \    If the field name match a known script (defined in your configuration),\n\
          \            it will be use for sorting.\n\n            In this case you\
          \ also need to provide additional parameters corresponding to your script\
          \ parameters.\n            If a script needs parameters, you can only use\
          \ the POST method.\n\n            Beware that this may have a big impact\
          \ on performance.\n            "
      - name: facets
        in: query
        required: false
        schema:
          type: string
          description: "Name of facets to return in the response as a comma-separated\
            \ value.\n            If None (default) no facets are returned."
          title: Facets
        description: "Name of facets to return in the response as a comma-separated\
          \ value.\n            If None (default) no facets are returned."
      - name: charts
        in: query
        required: false
        schema:
          type: string
          description: "Name of vega representations to return in the response.\n\
            \            If None (default) no charts are returned."
          title: Charts
        description: "Name of vega representations to return in the response.\n  \
          \          If None (default) no charts are returned."
      - name: index_id
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: "Index ID to use for the search, if not provided, the default\
            \ index is used.\n        If there is only one index, this parameter is\
            \ not needed."
          title: Index Id
        description: "Index ID to use for the search, if not provided, the default\
          \ index is used.\n        If there is only one index, this parameter is\
          \ not needed."
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ErrorSearchResponse'
                - $ref: '#/components/schemas/SuccessSearchResponse'
                title: Response Search Get Search Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /autocomplete:
    get:
      summary: Taxonomy Autocomplete
      operationId: taxonomy_autocomplete_autocomplete_get
      parameters:
      - name: q
        in: query
        required: true
        schema:
          type: string
          description: User autocomplete query.
          title: Q
        description: User autocomplete query.
      - name: taxonomy_names
        in: query
        required: true
        schema:
          type: string
          description: Name(s) of the taxonomy to search in, as a comma-separated
            value.
          title: Taxonomy Names
        description: Name(s) of the taxonomy to search in, as a comma-separated value.
      - name: lang
        in: query
        required: false
        schema:
          type: string
          description: Language to search in, defaults to 'en'.
          default: en
          title: Lang
        description: Language to search in, defaults to 'en'.
      - name: size
        in: query
        required: false
        schema:
          type: integer
          description: Number of results to return.
          default: 10
          title: Size
        description: Number of results to return.
      - name: fuzziness
        in: query
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          description: Fuzziness level to use, default to no fuzziness.
          title: Fuzziness
        description: Fuzziness level to use, default to no fuzziness.
      - name: index_id
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: "Index ID to use for the search, if not provided, the default\
            \ index is used.\n        If there is only one index, this parameter is\
            \ not needed."
          title: Index Id
        description: "Index ID to use for the search, if not provided, the default\
          \ index is used.\n        If there is only one index, this parameter is\
          \ not needed."
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /:
    get:
      summary: Html Search
      operationId: html_search__get
      parameters:
      - name: q
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Q
      - name: page
        in: query
        required: false
        schema:
          type: integer
          default: 1
          title: Page
      - name: page_size
        in: query
        required: false
        schema:
          type: integer
          default: 24
          title: Page Size
      - name: langs
        in: query
        required: false
        schema:
          type: string
          default: fr,en
          title: Langs
      - name: sort_by
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Sort By
      - name: index_id
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: "Index ID to use for the search, if not provided, the default\
            \ index is used.\n        If there is only one index, this parameter is\
            \ not needed."
          title: Index Id
        description: "Index ID to use for the search, if not provided, the default\
          \ index is used.\n        If there is only one index, this parameter is\
          \ not needed."
      - name: display_debug
        in: query
        required: false
        schema:
          type: boolean
          default: false
          title: Display Debug
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /robots.txt:
    get:
      summary: Robots Txt
      operationId: robots_txt_robots_txt_get
      responses:
        '200':
          description: Successful Response
          content:
            text/plain:
              schema:
                type: string
  /health:
    get:
      summary: Healthcheck
      operationId: healthcheck_health_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
components:
  schemas:
    ErrorSearchResponse:
      properties:
        debug:
          $ref: '#/components/schemas/SearchResponseDebug'
        errors:
          items:
            $ref: '#/components/schemas/SearchResponseError'
          type: array
          title: Errors
      type: object
      required:
      - debug
      - errors
      title: ErrorSearchResponse
    FacetInfo:
      properties:
        name:
          type: string
          title: Name
        items:
          items:
            $ref: '#/components/schemas/FacetItem'
          type: array
          title: Items
        count_error_margin:
          anyOf:
          - type: integer
          - type: 'null'
          title: Count Error Margin
      type: object
      required:
      - name
      - items
      title: FacetInfo
      description: Search result for a facet
    FacetItem:
      properties:
        key:
          type: string
          title: Key
        name:
          type: string
          title: Name
        count:
          anyOf:
          - type: integer
          - type: 'null'
          title: Count
        selected:
          type: boolean
          title: Selected
      type: object
      required:
      - key
      - name
      - count
      - selected
      title: FacetItem
      description: Describes an entry of a facet
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    SearchParameters:
      properties:
        q:
          anyOf:
          - type: string
          - type: 'null'
          title: Q
          description: 'The search query, it supports Lucene search query

            syntax (https://lucene.apache.org/core/3_6_0/queryparsersyntax.html).
            Words

            that are not recognized by the lucene query parser are searched as full
            text

            search.


            Example: `categories_tags:"en:beverages" strawberry brands:"casino"` query
            use a

            filter clause for categories and brands and look for "strawberry" in multiple

            fields.


            The query is optional, but `sort_by` value must then be provided.'
        langs:
          items:
            type: string
          type: array
          title: Langs
          description: 'List of languages we want to support during search.

            This list should include the user expected language, and additional languages
            (such

            as english for example).


            This is currently used for language-specific subfields to choose in which

            subfields we''re searching in.


            If not provided, `[''en'']` is used.'
          default:
          - en
        page_size:
          type: integer
          title: Page Size
          description: Number of results to return per page.
          default: 10
        page:
          type: integer
          minimum: 1.0
          title: Page
          description: Page to request, starts at 1.
          default: 1
        fields:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Fields
          description: List of fields to include in the response. All other fields
            will be ignored.
        sort_by:
          anyOf:
          - type: string
          - type: 'null'
          title: Sort By
          description: "Field name to use to sort results, the field should exist\n\
            \            and be sortable. If it is not provided, results are sorted\
            \ by descending relevance score.\n\n            If you put a minus before\
            \ the name, the results will be sorted by descending order.\n\n      \
            \      If the field name match a known script (defined in your configuration),\n\
            \            it will be use for sorting.\n\n            In this case you\
            \ also need to provide additional parameters corresponding to your script\
            \ parameters.\n            If a script needs parameters, you can only\
            \ use the POST method.\n\n            Beware that this may have a big\
            \ impact on performance.\n            "
        facets:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Facets
          description: "Name of facets to return in the response as a comma-separated\
            \ value.\n            If None (default) no facets are returned."
        charts:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Charts
          description: "Name of vega representations to return in the response.\n\
            \            If None (default) no charts are returned."
        sort_params:
          anyOf:
          - type: object
          - type: 'null'
          title: Sort Params
          description: "Additional parameters when using  a sort script in sort_by.\n\
            \            If the sort script needs parameters, you can only be used\
            \ the POST method."
        index_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Index Id
          description: "Index ID to use for the search, if not provided, the default\
            \ index is used.\n        If there is only one index, this parameter is\
            \ not needed."
      type: object
      title: SearchParameters
      description: Common parameters for search
    SearchResponseDebug:
      properties:
        query:
          type: object
          title: Query
      type: object
      required:
      - query
      title: SearchResponseDebug
    SearchResponseError:
      properties:
        title:
          type: string
          title: Title
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
      type: object
      required:
      - title
      title: SearchResponseError
    SuccessSearchResponse:
      properties:
        hits:
          items:
            type: object
          type: array
          title: Hits
        aggregations:
          anyOf:
          - type: object
          - type: 'null'
          title: Aggregations
        facets:
          anyOf:
          - additionalProperties:
              $ref: '#/components/schemas/FacetInfo'
            type: object
          - type: 'null'
          title: Facets
        charts:
          anyOf:
          - additionalProperties:
              type: object
            type: object
          - type: 'null'
          title: Charts
        page:
          type: integer
          title: Page
        page_size:
          type: integer
          title: Page Size
        page_count:
          type: integer
          title: Page Count
        debug:
          $ref: '#/components/schemas/SearchResponseDebug'
        took:
          type: integer
          title: Took
        timed_out:
          type: boolean
          title: Timed Out
        count:
          type: integer
          title: Count
        is_count_exact:
          type: boolean
          title: Is Count Exact
        warnings:
          anyOf:
          - items:
              $ref: '#/components/schemas/SearchResponseError'
            type: array
          - type: 'null'
          title: Warnings
      type: object
      required:
      - hits
      - page
      - page_size
      - page_count
      - debug
      - took
      - timed_out
      - count
      - is_count_exact
      title: SuccessSearchResponse
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
